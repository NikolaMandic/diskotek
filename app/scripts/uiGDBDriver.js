// Generated by CoffeeScript 1.6.3
(function() {
  angular.module('ldApp').factory('uiGDBDriver', [
    '$rootScope', 'command', 'DataDebug', 'DataDisassembly', function($rootScope, command, DataDebug, DataDisassembly) {
      /*
      #
      */

      var obj;
      return obj = {
        /*
         * start command is going to start qemu user emulator that will 
         * run this target and wait for a debuger to attach on 12345 port 
         * also it will start gdb that will load target from disk and then
         * commands set arch arm will be sent to the gdb
         * and target remote command to connect to the emulator
         *
        */

        loadCommand: function(name, architecture) {
          return command.commandExecO({
            msgType: 'start',
            payload: {
              name: name,
              architecture: architecture,
              initSteps: ['set disassembly-flavor intel\n']
            },
            callback: null
          });
        },
        startCommand: function(name, architecture) {
          command.commandExecO({
            msgType: 'start',
            payload: {
              name: name,
              architecture: architecture,
              initSteps: ['set disassembly-flavor intel\n', 'break _start\n', 'run\n']
            },
            callback: null
          });
          obj.debugData.getDissasembly();
          obj.debugData.getRegisterInfo();
          return obj.debugData.infoBreakpoints();
        },
        /*
         * stop command will send command to the gdb that will detach the debugger
         * qemu emulator exits at that point
         * then a quit command is sent and gdb exits
         *
        */

        stop: function() {
          command.commandExecO({
            ptyPayload: 'detach',
            callback: function() {
              obj.debugData.status = 'detached';
              obj.debugData.registers = [];
              return obj.data = [];
            }
          });
          return command.commandExecO({
            ptyPayload: 'quit',
            callback: null
          });
        }
      };
    }
  ]);

}).call(this);
